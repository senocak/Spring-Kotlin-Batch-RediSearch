server:
  port: 8099

logging:
  level:
    com.github.senocak: info
    org.springframework.batch: info
spring:
  application:
    name: Spring-Kotlin-Batch
  datasource:
    url: jdbc:postgresql://${SERVER_IP:localhost}:${POSTGRESQL_PORT:54321}/${POSTGRESQL_DB:batch}?currentSchema=${POSTGRESQL_SCHEMA:public}
    username: ${POSTGRESQL_USER:postgres}
    password: ${POSTGRESQL_PASSWORD:senocak}
    hikari:
      minimum-idle: 1 # The minimum connection pool size is 1
      maximum-pool-size: 40 # it can grow to at most 40 connections
      max-lifetime: 900_000 # to retire pooled connections after 10 minutes
      transaction-isolation: TRANSACTION_READ_COMMITTED # to optimize the number of gap locks held by db when traversing the clustered index for bulk updates or deletes.
      pool-name: SpringKotlinBatchHikariCP
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: false
        format_sql: false
    hibernate:
      ddl-auto: update
    show-sql: false
  data:
    jdbc:
      dialect: postgresql
    redis:
      HOST: ${REDIS_HOST:localhost}
      PORT: ${REDIS_PORT:6382}
      PASSWORD: ${REDIS_PASSWORD:}
      TIMEOUT: ${REDIS_TIMEOUT:300}
  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false
